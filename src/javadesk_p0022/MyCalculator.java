/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javadesk_p0022;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Vector;

/**
 *
 * @author tuans
 */
public class MyCalculator extends javax.swing.JFrame {

    /**
     * Creates new form MyCalculator
     */
    double number1;
    double number2;
    double number;
    Boolean waitReset=false;
    Boolean wantDouble=false;
    int powAfterDot=1;
    int memory=0;
    Boolean previousSign=false;
    Deque<String> queue=new LinkedList<>();
    
    public MyCalculator() {
        initComponents();
        setTextForScreen();
        waitReset=true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnDotSign1 = new javax.swing.JButton();
        txtScreen = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnClear = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnNumber8 = new javax.swing.JButton();
        btnNumber7 = new javax.swing.JButton();
        btnNumber9 = new javax.swing.JButton();
        btnMC = new javax.swing.JButton();
        btnMemoryDisplay = new javax.swing.JButton();
        btnMemoryAdd = new javax.swing.JButton();
        btnMemorySub = new javax.swing.JButton();
        btnSquareRootSign = new javax.swing.JButton();
        btnDivision = new javax.swing.JButton();
        btnDivisionBy100 = new javax.swing.JButton();
        btnNumber4 = new javax.swing.JButton();
        btnNumber5 = new javax.swing.JButton();
        btnNumber6 = new javax.swing.JButton();
        btnMultiply = new javax.swing.JButton();
        btnInverse = new javax.swing.JButton();
        btnNumber1 = new javax.swing.JButton();
        btnNumber2 = new javax.swing.JButton();
        btnNumber3 = new javax.swing.JButton();
        btnSubtract = new javax.swing.JButton();
        btnNumber0 = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnChangeSign = new javax.swing.JButton();
        btnDotSign = new javax.swing.JButton();
        btnSolve = new javax.swing.JButton();

        btnDotSign1.setBackground(new java.awt.Color(103, 150, 216));
        btnDotSign1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDotSign1.setText(".");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtScreen.setEditable(false);
        txtScreen.setBackground(new java.awt.Color(212, 254, 254));
        txtScreen.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txtScreen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtScreen.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnClear.setText("All clear");
        btnClear.setBorder(null);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnNumber8.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber8.setText("8");
        btnNumber8.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber8.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber8.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber8, gridBagConstraints);

        btnNumber7.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber7.setText("7");
        btnNumber7.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber7.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber7.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber7, gridBagConstraints);

        btnNumber9.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber9.setText("9");
        btnNumber9.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber9.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber9.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber9, gridBagConstraints);

        btnMC.setBackground(new java.awt.Color(239, 240, 8));
        btnMC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnMC.setText("MC");
        btnMC.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMC.setMaximumSize(new java.awt.Dimension(43, 43));
        btnMC.setMinimumSize(new java.awt.Dimension(43, 43));
        btnMC.setPreferredSize(new java.awt.Dimension(50, 50));
        btnMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMCActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnMC, gridBagConstraints);

        btnMemoryDisplay.setBackground(new java.awt.Color(239, 240, 8));
        btnMemoryDisplay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnMemoryDisplay.setText("MR");
        btnMemoryDisplay.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMemoryDisplay.setMaximumSize(new java.awt.Dimension(43, 43));
        btnMemoryDisplay.setMinimumSize(new java.awt.Dimension(43, 43));
        btnMemoryDisplay.setPreferredSize(new java.awt.Dimension(50, 50));
        btnMemoryDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemoryDisplayActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnMemoryDisplay, gridBagConstraints);

        btnMemoryAdd.setBackground(new java.awt.Color(239, 240, 8));
        btnMemoryAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnMemoryAdd.setText("M+");
        btnMemoryAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMemoryAdd.setMaximumSize(new java.awt.Dimension(43, 43));
        btnMemoryAdd.setMinimumSize(new java.awt.Dimension(43, 43));
        btnMemoryAdd.setPreferredSize(new java.awt.Dimension(50, 50));
        btnMemoryAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemoryAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnMemoryAdd, gridBagConstraints);

        btnMemorySub.setBackground(new java.awt.Color(239, 240, 8));
        btnMemorySub.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnMemorySub.setText("M-");
        btnMemorySub.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnMemorySub.setMaximumSize(new java.awt.Dimension(43, 43));
        btnMemorySub.setMinimumSize(new java.awt.Dimension(43, 43));
        btnMemorySub.setPreferredSize(new java.awt.Dimension(50, 50));
        btnMemorySub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemorySubActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnMemorySub, gridBagConstraints);

        btnSquareRootSign.setBackground(new java.awt.Color(17, 248, 10));
        btnSquareRootSign.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSquareRootSign.setText("√");
        btnSquareRootSign.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSquareRootSign.setMaximumSize(new java.awt.Dimension(43, 43));
        btnSquareRootSign.setMinimumSize(new java.awt.Dimension(43, 43));
        btnSquareRootSign.setPreferredSize(new java.awt.Dimension(50, 50));
        btnSquareRootSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSquareRootSignActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnSquareRootSign, gridBagConstraints);

        btnDivision.setBackground(new java.awt.Color(17, 248, 10));
        btnDivision.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDivision.setText("÷");
        btnDivision.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnDivision.setMaximumSize(new java.awt.Dimension(43, 43));
        btnDivision.setMinimumSize(new java.awt.Dimension(43, 43));
        btnDivision.setPreferredSize(new java.awt.Dimension(50, 50));
        btnDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnDivision, gridBagConstraints);

        btnDivisionBy100.setBackground(new java.awt.Color(17, 248, 10));
        btnDivisionBy100.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDivisionBy100.setText("%");
        btnDivisionBy100.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnDivisionBy100.setMaximumSize(new java.awt.Dimension(43, 43));
        btnDivisionBy100.setMinimumSize(new java.awt.Dimension(43, 43));
        btnDivisionBy100.setPreferredSize(new java.awt.Dimension(50, 50));
        btnDivisionBy100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisionBy100ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnDivisionBy100, gridBagConstraints);

        btnNumber4.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber4.setText("4");
        btnNumber4.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber4.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber4.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber4, gridBagConstraints);

        btnNumber5.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber5.setText("5");
        btnNumber5.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber5.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber5.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber5, gridBagConstraints);

        btnNumber6.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber6.setText("6");
        btnNumber6.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber6.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber6.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber6, gridBagConstraints);

        btnMultiply.setBackground(new java.awt.Color(17, 248, 10));
        btnMultiply.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMultiply.setText("×");
        btnMultiply.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnMultiply.setMaximumSize(new java.awt.Dimension(43, 43));
        btnMultiply.setMinimumSize(new java.awt.Dimension(43, 43));
        btnMultiply.setPreferredSize(new java.awt.Dimension(50, 50));
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnMultiply, gridBagConstraints);

        btnInverse.setBackground(new java.awt.Color(17, 248, 10));
        btnInverse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnInverse.setText("1/x");
        btnInverse.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnInverse.setMaximumSize(new java.awt.Dimension(43, 43));
        btnInverse.setMinimumSize(new java.awt.Dimension(43, 43));
        btnInverse.setPreferredSize(new java.awt.Dimension(50, 50));
        btnInverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInverseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnInverse, gridBagConstraints);

        btnNumber1.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber1.setText("1");
        btnNumber1.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber1.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber1.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber1, gridBagConstraints);

        btnNumber2.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber2.setText("2");
        btnNumber2.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber2.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber2.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber2, gridBagConstraints);

        btnNumber3.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber3.setText("3");
        btnNumber3.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber3.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber3.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber3, gridBagConstraints);

        btnSubtract.setBackground(new java.awt.Color(17, 248, 10));
        btnSubtract.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSubtract.setText("-");
        btnSubtract.setMaximumSize(new java.awt.Dimension(43, 43));
        btnSubtract.setMinimumSize(new java.awt.Dimension(43, 43));
        btnSubtract.setPreferredSize(new java.awt.Dimension(50, 50));
        btnSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubtractActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnSubtract, gridBagConstraints);

        btnNumber0.setBackground(new java.awt.Color(103, 150, 216));
        btnNumber0.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNumber0.setText("0");
        btnNumber0.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNumber0.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNumber0.setPreferredSize(new java.awt.Dimension(50, 50));
        btnNumber0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnNumber0, gridBagConstraints);

        btnAdd.setBackground(new java.awt.Color(17, 248, 10));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd.setText("+");
        btnAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAdd.setMaximumSize(new java.awt.Dimension(43, 43));
        btnAdd.setMinimumSize(new java.awt.Dimension(43, 43));
        btnAdd.setPreferredSize(new java.awt.Dimension(50, 50));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnAdd, gridBagConstraints);

        btnChangeSign.setBackground(new java.awt.Color(17, 248, 10));
        btnChangeSign.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnChangeSign.setText("±");
        btnChangeSign.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnChangeSign.setMaximumSize(new java.awt.Dimension(43, 43));
        btnChangeSign.setMinimumSize(new java.awt.Dimension(43, 43));
        btnChangeSign.setPreferredSize(new java.awt.Dimension(50, 50));
        btnChangeSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeSignActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnChangeSign, gridBagConstraints);

        btnDotSign.setBackground(new java.awt.Color(103, 150, 216));
        btnDotSign.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDotSign.setText(".");
        btnDotSign.setMaximumSize(new java.awt.Dimension(43, 43));
        btnDotSign.setMinimumSize(new java.awt.Dimension(43, 43));
        btnDotSign.setPreferredSize(new java.awt.Dimension(50, 50));
        btnDotSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDotSignActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel2.add(btnDotSign, gridBagConstraints);

        btnSolve.setBackground(new java.awt.Color(17, 248, 10));
        btnSolve.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSolve.setText("=");
        btnSolve.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSolve.setMaximumSize(new java.awt.Dimension(43, 43));
        btnSolve.setMinimumSize(new java.awt.Dimension(43, 43));
        btnSolve.setPreferredSize(new java.awt.Dimension(50, 50));
        btnSolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 10, 0);
        jPanel2.add(btnSolve, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtScreen)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(txtScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void addToLastDigit(int digit){
        if (wantDouble){
            powAfterDot++;
            number=number+digit*10/(Math.pow(10, powAfterDot));
        }else{
            number=number*10+digit;
        }
    }
    int positionDot(double numberTemp){
        String temp=String.valueOf(numberTemp);
        for (int i=0;i<temp.length();i++){
            if (temp.charAt(i)=='.') return i;
        }
        return -1;
    }
    Boolean isDouble(double numberTemp){  
        String temp=String.valueOf(numberTemp);
        for (int i=positionDot(numberTemp)+1;i<temp.length();i++){
            if (temp.charAt(i)!='0') return true;
        }
        return false;
    }
    private void btnMemoryDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemoryDisplayActionPerformed
        // TODO add your handling code here:
        //number=memory;
        //setTextForScreen();
        setMemoryForScreen();
        waitReset=true;
    }//GEN-LAST:event_btnMemoryDisplayActionPerformed

    private void btnInverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInverseActionPerformed
        // TODO add your handling code here:
        number=CalculatorLogic.inverse(number);
        setTextForScreen();
    }//GEN-LAST:event_btnInverseActionPerformed

    //clear memory and screen
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtScreen.setText("");
        number1=number2=number=0;
        wantDouble=false;
        powAfterDot=1;
        setTextForScreen();
        waitReset=true;
        previousSign=false;
        queue.clear();
    }//GEN-LAST:event_btnClearActionPerformed

    //count numbers after dot
    int countNumbersAfterDot(double numberTemp){
        String string=String.valueOf(numberTemp);
        int positionDot=-1;
        int lengthInt=0;
        for (int i=0;i<string.length();i++){
            if (string.charAt(i)=='.'){
                positionDot=i;
                break;
            }
            lengthInt++;
        }
        if (positionDot==-1) return 0;
        return (string.length()-lengthInt-1);
    }
    //setup screen after input next number 
    void setupScreenByNumber(char character){
        if (!waitReset){
            if ('0'<=character && character<='9' || character=='.'){
                txtScreen.setText(txtScreen.getText().toString()+character);
            }
        }else
        {
            txtScreen.setText(character+"");
            number=character-'0';
            waitReset=false;
        }
    }
    
    //set text for screen to display
    void setTextForScreen(){
        DecimalFormat nf1 = new DecimalFormat("#");
        DecimalFormat nf2 = new DecimalFormat("#.########");
        if (!isDouble(number)){
            txtScreen.setText(nf1.format(number));
        }else{
            if (positionDot(number)!=-1)
            {
                if (isDouble(number) && (number-(int)number!=0)){
                    txtScreen.setText(nf2.format(number));
                }
                else{
                    txtScreen.setText(nf2.format(number)+".");
                }
            }else{
                //txtScreen.setText(nf2.format(number));
                int countAfterDotTemp=countNumbersAfterDot(number);
                txtScreen.setText(String.format("%."+countAfterDotTemp+"f", number));
            }
        }
    }
    //set text for screen to display
    void setMemoryForScreen(){
        DecimalFormat nf1 = new DecimalFormat("#");
        DecimalFormat nf2 = new DecimalFormat("#.########");
        
        if (!isDouble(number)){
            txtScreen.setText(nf1.format(memory));
        }else{
//            if (!isDisplayDot)
//            {
//                isDisplayDot=true;
//                txtScreen.setText(nf2.format(memory)+".");
//            }else{
                //txtScreen.setText(nf2.format(number));
                int countAfterDotTemp=powAfterDot-1;
                txtScreen.setText(String.format("%."+countAfterDotTemp+"f", memory));
            //}
        }
    }
    Boolean hasDotInScreen(String string){
        Boolean hasDotInScreen=false;
        for (int i=0;i<txtScreen.getText().toString().length();i++){
            if (txtScreen.getText().toString().charAt(i)=='.')
                hasDotInScreen=true;
        }
        return hasDotInScreen;
    }
    void addDotAtLAtForScreen(){
        String temp=txtScreen.getText().toString();
        DecimalFormat nf2 = new DecimalFormat("#.########");
        if (hasDotInScreen(temp)==false){
            txtScreen.setText(nf2.format(number)+".");
        }
    }
    //add number 0 at last of screen
    private void btnNumber0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber0ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(0);
        setupScreenByNumber('0');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber0ActionPerformed
    //add number 1 at last of screen
    private void btnNumber1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber1ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(1);
        setupScreenByNumber('1');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber1ActionPerformed

    //add number 3 at last of screen
    private void btnNumber3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber3ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(3);
        setupScreenByNumber('3');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber3ActionPerformed
    //add number 4 at last of screen
    private void btnNumber4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber4ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(4);
        setupScreenByNumber('4');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber4ActionPerformed
    //add number 5 at last of screen
    private void btnNumber5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber5ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(5);
        setupScreenByNumber('5');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber5ActionPerformed
    //add number 6 at last of screen
    private void btnNumber6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber6ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(6);
        setupScreenByNumber('6');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber6ActionPerformed
    //add number 7 at last of screen
    private void btnNumber7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber7ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(7);
        setupScreenByNumber('7');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber7ActionPerformed
    //add number 9 at last of screen
    private void btnNumber9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber9ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(9);
        setupScreenByNumber('9');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber9ActionPerformed

    private void btnDotSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDotSignActionPerformed
        // TODO add your handling code here:
        //setTextForScreen();
        wantDouble=true;
        waitReset=false;
        if (number==0) txtScreen.setText(".");
        else addDotAtLAtForScreen();
    }//GEN-LAST:event_btnDotSignActionPerformed
    Boolean isOperatorString(String string){
        if (string.compareToIgnoreCase("=")==0) return true;
        if (string.compareToIgnoreCase("+")==0) return true;
        if (string.compareToIgnoreCase("-")==0) return true;
        if (string.compareToIgnoreCase("*")==0) return true;
        if (string.compareToIgnoreCase("/")==0) return true;
        return false;
    }
    Double calculateByString(String num1, String num2, String operator){
        
        if (operator.compareToIgnoreCase("+")==0) 
            return Double.parseDouble(num1)+Double.parseDouble(num2);
        if (operator.compareToIgnoreCase("-")==0)
            return Double.parseDouble(num1)-Double.parseDouble(num2);
        if (operator.compareToIgnoreCase("*")==0)
            return Double.parseDouble(num1)*Double.parseDouble(num2);
        if (operator.compareToIgnoreCase("/")==0) 
            return Double.parseDouble(num1)/Double.parseDouble(num2);
        return null;
    }
    Boolean isNumber(String number){
        try {
            Double tempNumber=Double.parseDouble(number);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    void checkQueue(){
        if (!queue.contains("="))
            if (queue.size()<=3) return;
        Vector<String> vector=new Vector();
        int numOperator=0;
        while (!queue.isEmpty()){
            String temp=queue.poll();
            if (isOperatorString(temp))
                numOperator++;
//            if (!vector.isEmpty() && isNumber(vector.firstElement()) && isNumber(temp)){
//                vector.clear();
//            }
            vector.add(temp);
        }
        for (int i=vector.size()-1;i>0;i--){
            if (isNumber(vector.get(i)) && isNumber(vector.get(i-1))){
                vector.remove(i-1);
            }
        }
        if (numOperator>=2){
            //Double result=new Double(0);
            if (vector.size()==3 && vector.get(2).compareTo("=")==0){
                Double result=calculateByString(vector.get(0), vector.get(0), vector.get(1));
                queue.add(String.valueOf(result));
                number=result;
                setTextForScreen();
            }else{
                Double result=calculateByString(vector.get(0), vector.get(2), vector.get(1));
                queue.add(String.valueOf(result));
                number=result;
                setTextForScreen();
                for (int i=3;i<vector.size();i++)
                    if (vector.get(i).compareToIgnoreCase("=")!=0)
                    queue.add(vector.get(i));
            }
            //queue.add(String.valueOf(number));
        }
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
//        queue.add(String.valueOf(number));
//        queue.add("+");
        if (!queue.isEmpty()&&isOperatorString(queue.getLast()) && queue.getLast().compareTo("=")!=0){
            queue.pollLast();
            queue.add("+");
        }else{
            queue.add(String.valueOf(number));
            queue.add("+");
        }
        checkQueue();
        
        waitReset=true;
        wantDouble=false;
        powAfterDot=1;
        setTextForScreen();
    }//GEN-LAST:event_btnAddActionPerformed

    //clear the memory
    private void btnMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMCActionPerformed
        // TODO add your handling code here:
        memory=0;
    }//GEN-LAST:event_btnMCActionPerformed

    //add value to memory
    private void btnMemoryAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemoryAddActionPerformed
        // TODO add your handling code here:
        memory+=number;
        number=0;
    }//GEN-LAST:event_btnMemoryAddActionPerformed

    private void btnChangeSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeSignActionPerformed
        // TODO add your handling code here:
        if (txtScreen.getText().toString().charAt(0)=='-'){
            txtScreen.setText(txtScreen.getText().substring(1));
        }
        else{
            txtScreen.setText("-"+txtScreen.getText());
        }
        number=number*(-1);
        
    }//GEN-LAST:event_btnChangeSignActionPerformed

    private void btnMemorySubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemorySubActionPerformed
        // TODO add your handling code here:
        memory-=number;
        number=0;
        waitReset=true;
    }//GEN-LAST:event_btnMemorySubActionPerformed

    private void btnDivisionBy100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisionBy100ActionPerformed
        // TODO add your handling code here:
        number=CalculatorLogic.div(number, 100);
        setTextForScreen();
    }//GEN-LAST:event_btnDivisionBy100ActionPerformed

    private void btnDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisionActionPerformed
        // TODO add your handling code here:
        if (!queue.isEmpty() && isOperatorString(queue.getLast()) && queue.getLast().compareTo("=")!=0){
            queue.pollLast();
            queue.add("/");
        }else{
            queue.add(String.valueOf(number));
            queue.add("/");
        }
        previousSign=true;
        checkQueue();
        
        waitReset=true;
        wantDouble=false;
        powAfterDot=1;
        setTextForScreen();
    }//GEN-LAST:event_btnDivisionActionPerformed

    private void btnNumber8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber8ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(8);
        setupScreenByNumber('8');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber8ActionPerformed

    private void btnNumber2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber2ActionPerformed
        // TODO add your handling code here:
        addToLastDigit(2);
        setupScreenByNumber('2');
        //setTextForScreen();
    }//GEN-LAST:event_btnNumber2ActionPerformed

    void solveQueue(){
        if (queue.size()<=3) return;
        Vector<String> vector=new Vector();
        int numOperator=0;
        while (!queue.isEmpty()){
            String temp=queue.poll();
            if (isOperatorString(temp))
                numOperator++;
            vector.add(temp);
        }
        if (numOperator>=2){
            //Double result=new Double(0);
            if (vector.size()==3 && vector.get(2).compareTo("=")==0){
                Double result=calculateByString(vector.get(0), vector.get(0), vector.get(1));
                queue.add(String.valueOf(result));
                number=result;
                setTextForScreen();
            }else{
                Double result=calculateByString(vector.get(0), vector.get(2), vector.get(1));
                queue.add(String.valueOf(result));
                number=result;
                setTextForScreen();
                for (int i=3;i<vector.size();i++)
                    queue.add(vector.get(i));
            }
            
        }
    }
    private void btnSolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolveActionPerformed
        // TODO add your handling code here:
//        waitReset=true;
//        wantDouble=false;
//        powAfterDot=1;
//        if (!queue.isEmpty()){
//            solveQueue();
//            number=Double.parseDouble(queue.element());
//        }
        queue.add(String.valueOf(number));
        queue.add("=");
        checkQueue();
        
        waitReset=true;
        wantDouble=false;
        powAfterDot=1;
        setTextForScreen();
        
    }//GEN-LAST:event_btnSolveActionPerformed

    private void btnSquareRootSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSquareRootSignActionPerformed
        // TODO add your handling code here:
        number=CalculatorLogic.divSquareRoot(number);
        setTextForScreen();
        waitReset=true;
    }//GEN-LAST:event_btnSquareRootSignActionPerformed

    private void btnSubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubtractActionPerformed
        // TODO add your handling code here:
//        queue.add(String.valueOf(number));
//        queue.add("-");
        if (!queue.isEmpty()&&isOperatorString(queue.getLast()) && queue.getLast().compareTo("=")!=0){
            queue.pollLast();
            queue.add("-");
        }else{
            queue.add(String.valueOf(number));
            queue.add("-");
        }
        checkQueue();
        
        waitReset=true;
        wantDouble=false;
        powAfterDot=1;
        setTextForScreen();
    }//GEN-LAST:event_btnSubtractActionPerformed

    private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
        // TODO add your handling code here:
//        queue.add(String.valueOf(number));
//        queue.add("*");
        if (!queue.isEmpty()&&isOperatorString(queue.getLast()) && queue.getLast().compareTo("=")!=0){
            queue.pollLast();
            queue.add("*");
        }else{
            queue.add(String.valueOf(number));
            queue.add("*");
        }
        checkQueue();
        
        waitReset=true;
        wantDouble=false;
        powAfterDot=1;
        setTextForScreen();
    }//GEN-LAST:event_btnMultiplyActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChangeSign;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDivision;
    private javax.swing.JButton btnDivisionBy100;
    private javax.swing.JButton btnDotSign;
    private javax.swing.JButton btnDotSign1;
    private javax.swing.JButton btnInverse;
    private javax.swing.JButton btnMC;
    private javax.swing.JButton btnMemoryAdd;
    private javax.swing.JButton btnMemoryDisplay;
    private javax.swing.JButton btnMemorySub;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JButton btnNumber0;
    private javax.swing.JButton btnNumber1;
    private javax.swing.JButton btnNumber2;
    private javax.swing.JButton btnNumber3;
    private javax.swing.JButton btnNumber4;
    private javax.swing.JButton btnNumber5;
    private javax.swing.JButton btnNumber6;
    private javax.swing.JButton btnNumber7;
    private javax.swing.JButton btnNumber8;
    private javax.swing.JButton btnNumber9;
    private javax.swing.JButton btnSolve;
    private javax.swing.JButton btnSquareRootSign;
    private javax.swing.JButton btnSubtract;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtScreen;
    // End of variables declaration//GEN-END:variables
}
